events {
    worker_connections 1024;
}

http {
    upstream users-service {
        server users-service:3001;
    }

    upstream notifications-service {
        server notifications-service:3002;
    }

    server {
        listen 80;
        server_name localhost;

        # ConfiguraciÃ³n CORS
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;

        # Manejar requests OPTIONS para CORS
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        # Health check general
        location /health {
            add_header Content-Type application/json;
            return 200 '{"status":"OK","message":"API Gateway funcionando","timestamp":"$time_iso8601"}';
        }

        # Rutas para el servicio de usuarios
        location /api/users {
            rewrite ^/api/users(.*)$ $1 break;
            proxy_pass http://users-service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Rutas para el servicio de notificaciones
        location /api/notifications {
            rewrite ^/api/notifications(.*)$ $1 break;
            proxy_pass http://notifications-service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # PÃ¡gina de bienvenida
        location / {
            add_header Content-Type application/json;
            return 200 '{"message":"ðŸš€ Bienvenido al API Gateway de Microservicios","services":{"users":"/api/users","notifications":"/api/notifications"},"health":"/health"}';
        }
    }
}
